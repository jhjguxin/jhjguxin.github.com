<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: errors | Francis's Octopress Blog]]></title>
  <link href="http://jhjguxin.github.io/tags/errors/atom.xml" rel="self"/>
  <link href="http://jhjguxin.github.io/"/>
  <updated>2013-11-12T19:23:30+08:00</updated>
  <id>http://jhjguxin.github.io/</id>
  <author>
    <name><![CDATA[Francis Jiang]]></name>
    <email><![CDATA[864248765@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决Illegal mix of collations (latin1_swedish_ci,IMPLICIT) and (utf8_general_ci,COER]]></title>
    <link href="http://jhjguxin.github.io/blog/2012/06/13/jie-jue-illegal-mix-of-collations-latin1-swedish-ci-implicit-and-utf8-general-ci-coer/"/>
    <updated>2012-06-13T10:56:00+08:00</updated>
    <id>http://jhjguxin.github.io/blog/2012/06/13/jie-jue-illegal-mix-of-collations-latin1-swedish-ci-implicit-and-utf8-general-ci-coer</id>
    <content type="html"><![CDATA[<h2>解决Illegal mix of collations (latin1_swedish_ci,IMPLICIT) and (utf8_general_ci,COER</h2>

<p>部署完项目，测试一下，诶，数据出来了 没有多大问题（暗舒一口气）。继续测吧，一点新建完了，报错了，看看什么错误</p>

<p>一看完了 java.sql.SQLException: Illegal mix of collations (latin1_swedish_ci,IMPLICIT)</p>

<p>and (utf8_general_ci,COERCIBLE) for operation &lsquo;=&rsquo; 是这个错误 ，什么原因呢，第一次遇到。</p>

<p>头大了。去查文档说是：结果集中有两种字符集。 我晕了 ，怎么会这样呢，看看表结构，一种啊。 继续查吧。</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy7096" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">SHOW VARIABLES LIKE 'character_set_%'; 查看一下 显示+--------------------------+----------------------------+

| Variable_name | Value |

+--------------------------+----------------------------+

| character_set_client | utf8|

| character_set_connection | utf8|

| character_set_database | latin1 |

| character_set_results | utf8|

| character_set_server | latin1 |

| character_set_system | utf8 |

| character_sets_dir | /home/jh/<a href="http://www.111cn.net/list-110/" target="_blank">mysql</a>/share/mysql/charsets |</td>
</tr>
</tbody>
</table>


<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p>再用 SHOW VARIABLES LIKE &lsquo;collation_%&rsquo;; 查看一下 显示</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy1112" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">+----------------------+-------------------+| Variable_name | Value |

+----------------------+-------------------+

| collation_connection | utf8_swedish_ci |

| collation_database | latin1_swedish_ci |

| collation_server | latin1_swedish_ci |

+----------------------+-------------------+</td>
</tr>
</tbody>
</table>


<p>原来如此啊 哈哈 知道错在哪里 剩下的就好办了</p>

<p><strong>解决方法：</strong></p>

<p>依次执行：</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy2457" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">set character_set_database =utf8;

&nbsp;

set character_set_results =utf8;

&nbsp;

set character_set_server =utf8;

&nbsp;

set character_set_system =utf8; --此处utf-8也可以

&nbsp;

然后执行：

&nbsp;

SET collation_server = utf8_general_ci

&nbsp;

&nbsp;

SET collation_database = utf8_general_ci</td>
</tr>
</tbody>
</table>


<p>执行完之后，请检查mysql下每个<a href="http://www.111cn.net/database/database.html" target="_blank">数据库</a>，表，字段是否都是utf8，不是则改过来，这样子就不会出现</p>

<p>&nbsp;</p>

<p>最笨的方法是重装一下数据库。（一般不要用这种方法呀）</p>

<p>最终解决方法：</p>

<p>1.1 如果是windows版本的mysql，那么在安装的时候，系统就会提示用哪种编码。</p>

<p>如果安装的时候设置错误了，修改mysql安装目录下的my.ini文件：</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy1531" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">[mysql]default-character-set=utf8

...

# The default character set that will be used when a new schema or table is

# created and no character set is defined

default-character-set=utf8</td>
</tr>
</tbody>
</table>


<p>配置好后，重启mysql。</p>

<p>1.2 如果是linux版本的mysql</p>

<p>&nbsp;</p>

<p>修改mysql的配置文件,使数据库与服务器操作系统的字符集设置一致。</p>

<p>vi /etc/my.cnf 设置(如果没有发现这个文件，就新建1个)</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy7728" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">[mysqld]datadir=/var/lib/mysql

socket=/var/lib/mysql/mysql.sock

default-character-set=utf8</td>
</tr>
</tbody>
</table>


<p>(增加的关键一句,使得数据库缺省以utf8存储)</p>

<p>当然，修改后，要重启数据库。（这样设置后对新建的数据库表才起作用）</p>

<p>&nbsp;</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy8374" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">用SHOW VARIABLES LIKE 'character_set_%';命令查看到如下内容：+--------------------------+-----------------------------------------------------------------------+

| Variable_name | Value |

+--------------------------+-----------------------------------------------------------------------+

| character_set_client | utf8|

| character_set_connection | utf8|

| |character_set_database |utf8 |

| character_set_filesystem | binary |

| character_set_results | utf8|

| character_set_server | utf8 |

| character_set_system | utf8 |

| character_sets_dir | /home/jh/mysql/share/mysql/charsets |

+--------------------------+-----------------------------------------------------------------------+</td>
</tr>
</tbody>
</table>


<p>发现关键项目已经用了utf8，但这样还不够，还要保证客户端也是用utf8的字符集来操作的。</p>

<p>登录的时候，要用以下命令：mysql &mdash;default-character-set=utf8 -u root -p</p>

<p>再次用SHOW VARIABLES LIKE &lsquo;character_set_%&rsquo;;命令查看，结果变成了：</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy4025" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">+--------------------------+-----------------------------------------------------------------------+| Variable_name | Value |

+--------------------------+-----------------------------------------------------------------------+

| character_set_client | utf8 |

| character_set_connection | utf8 |

| character_set_database | utf8 |

| character_set_filesystem | binary |

| character_set_results | utf8 |

| character_set_server | utf8 |

| character_set_system | utf8 |

| character_sets_dir | /home/jh/mysql/share/mysql/charsets/ |</td>
</tr>
</tbody>
</table>


<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+</p>

<p>这样才能保证客户端所发命令都是基于utf8格式的，比如说建立数据库和表，默认就会以utf8编码，而无须再次指定。（再次说一句对新建的数据库和表起作用）。</p>

<p>另外：</p>

<p>第三种方法：网上看到的，先记录一下。</p>

<p>1.如果安装mysql的编码已不能更改,很多朋友是购买虚拟主机建立网站,无权更改MYSQL的安装编码,这一关我们可以跳过,因为只要后面的步聚正确,一样能解决乱码问题
2.修改数据库编码，如果是数据库编码不正确: 可以在<a href="http://www.111cn.net/phper/php.html" target="_blank">php</a>myadmin 执行如下命令: ALTER DATABASE <code>test</code> DEFAULT CHARACTER SET utf8 COLLATE utf8_bin
以上命令就是将test数据库的编码设为utf8
3.修改表的编码：</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy1726" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">ALTER TABLE `category` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin</td>
</tr>
</tbody>
</table>


<p>以上命令就是将一个表category的编码改为utf8
4.修改字段的编码：</p>

<table width="620" border="0" cellspacing="1" cellpadding="1" align="center">
<tbody>
<tr>
<td bgcolor="#FFE7CE" width="464" height="27"> 代码如下</td>
<td align="center" bgcolor="#FFE7CE" width="109">复制代码</td>
</tr>
<tr>
<td id="copy2640" colspan="2" valign="top" bgcolor="#FFFFFF" height="auto">
<pre>mysql&gt; use askjane_development;
Database changed
mysql&gt; alter database mydb character set utf8;
ERROR 1 (HY000): Can't create/write to file './mydb/db.opt' (Errcode: 2)
mysql&gt; ALTER TABLE tags CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;Query OK, 2 rows affected (0.35 sec)</pre>
</td>
</tr>
</tbody>
</table>


<p>以上命令就是将test表中 dd的字段编码改为utf8
5.如果是这种情况容易解决，只需检查下页面，修改源文件的charset即可
, //这个正确就无问题了
6.这种情况也是修改页面charset即可.</p>

<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails - Devise - Handling - devise_error_messages]]></title>
    <link href="http://jhjguxin.github.io/blog/2012/05/30/rails-devise-handling-devise-error-messages/"/>
    <updated>2012-05-30T13:10:00+08:00</updated>
    <id>http://jhjguxin.github.io/blog/2012/05/30/rails-devise-handling-devise-error-messages</id>
    <content type="html"><![CDATA[<h2>rails &ndash; Devise &ndash; Handling &ndash; devise_error_messages</h2>

<p>in my user edit page, there is a line as follows:</p>

<pre><code>&lt;%= devise_error_messages! %&gt; </code></pre>


<p>The problem is this does not output errors the stand way that the rest of the app does:</p>

<pre><code>&lt;% flash.each do |key, value| %&gt;     &lt;divpun" style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; border-image: initial; vertical-align: baseline; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; color: rgb(0, 0, 0); "&gt;&lt;%= key %&gt;"&gt;&lt;%= value %&gt;&lt;/div&gt; &lt;% end %&gt; </code></pre>


<p>My question, is how to I get the devise error message to work like the others that use the flash.each?</p>

<p>Thanks</p>

<p>I&rsquo;m trying to figure this out myself. I just found this issue logged on Github<a href="https://github.com/plataformatec/devise/issues/issue/504/#comment_574788" rel="nofollow"><a href="https://github.com/plataformatec/devise/issues/issue/504/#comment_574788">https://github.com/plataformatec/devise/issues/issue/504/#comment_574788</a></a></p>

<p>Jose is saying that <code>devise_error_messsages!</code> method is just a <em>stub</em> (though it contains implementation) and that we&rsquo;re supposed to override/replace it. It would have been nice if this was pointed out somewhere in the wiki, which is why i guess there are a few people like us that have been guessing.</p>

<p>So I&rsquo;m going to try reopening the module and redefine the method, effectively overriding the default implementation. I&rsquo;ll let you know how it goes.</p>

<h2>Update</h2>


<p>Yep, that works. I created <code>app/helpers/deivse_helper.rb</code> and overrode it like so:</p>

<pre><code>module DeviseHelper   def devise_error_messages!     'KABOOM!'   end end </code></pre>


<p>So knowing this, I can modify the method to display error messages the way I want it to.</p>

<p>To help you solve your original problem: Here&rsquo;s the original <a href="https://github.com/plataformatec/devise/blob/master/app/helpers/devise_helper.rb#L6" rel="nofollow"><code>devise_helper.rb</code> on Github</a>. Take a look at how the error messages are being traversed, specifically <a href="https://github.com/plataformatec/devise/blob/master/app/helpers/devise_helper.rb#L5" rel="nofollow">Line 5</a>.</p>

<pre><code>messages = resource.errors.full_messages.map { |msg| content_tag(:li, msg) }.join </code></pre>


<p>That should help you get started. :)</p>

<h2>Another update</h2>


<p>The <code>resource</code> object is actually the model that is being used by devise (go figure).</p>

<pre><code>resource.class         #=&gt; User resource.errors.class  #=&gt; ActiveModel::Error </code></pre>


<p>It also appears to be defined in a higher scope (probably coming from the controller), so it can be accessed in a variety of places.</p>

<p>Anywhere in your Helper</p>

<pre><code>module DeviseHelper   def devise_error_messages1!     resource.errors.full_messages.map { |msg| content_tag(:li, msg) }.join   end   def devise_error_messages2!     resource.errors.full_messages.map { |msg| content_tag(:p, msg) }.join   end end </code></pre>


<p>Your View</p>

<pre><code>&lt;div&gt;&lt;%= resource.errors.inspect %&gt;&lt;/div&gt;</code></pre>


<p>More info look at <a href="http://stackoverflow.com/questions/4101641/rails-devise-handling-devise-error-messages"><a href="http://stackoverflow.com/questions/4101641/rails-devise-handling-devise-error-messages">http://stackoverflow.com/questions/4101641/rails-devise-handling-devise-error-messages</a></a></p>
]]></content>
  </entry>
  
</feed>
